<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.issCollege.dao.UserDAO">
  <resultMap id="BaseResultMap" type="com.issCollege.po.User">
    <id column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="user_type" jdbcType="CHAR" property="userType" />
    <result column="user_name" jdbcType="CHAR" property="userName" />
    <result column="id_number" jdbcType="VARCHAR" property="idNumber" />
    <result column="taxPayer_id" jdbcType="VARCHAR" property="taxpayerId" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="telephone" jdbcType="VARCHAR" property="telephone" />
    <result column="mail" jdbcType="VARCHAR" property="mail" />
    <result column="created" jdbcType="TIMESTAMP" property="created" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    user_id, user_type, user_name, id_number, taxPayer_id, address, `password`, telephone, 
    mail, created
  </sql>
  <select id="selectByExample" parameterType="com.issCollege.po.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where user_id = #{userId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user
    where user_id = #{userId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.issCollege.po.UserExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.issCollege.po.User">
    insert into user (user_id, user_type, user_name, 
      id_number, taxPayer_id, address, 
      `password`, telephone, mail, 
      created)
    values (#{userId,jdbcType=BIGINT}, #{userType,jdbcType=CHAR}, #{userName,jdbcType=CHAR}, 
      #{idNumber,jdbcType=VARCHAR}, #{taxpayerId,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{telephone,jdbcType=VARCHAR}, #{mail,jdbcType=VARCHAR}, 
      #{created,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.issCollege.po.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="userType != null">
        user_type,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="idNumber != null">
        id_number,
      </if>
      <if test="taxpayerId != null">
        taxPayer_id,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="telephone != null">
        telephone,
      </if>
      <if test="mail != null">
        mail,
      </if>
      <if test="created != null">
        created,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="userType != null">
        #{userType,jdbcType=CHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=CHAR},
      </if>
      <if test="idNumber != null">
        #{idNumber,jdbcType=VARCHAR},
      </if>
      <if test="taxpayerId != null">
        #{taxpayerId,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="mail != null">
        #{mail,jdbcType=VARCHAR},
      </if>
      <if test="created != null">
        #{created,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.issCollege.po.UserExample" resultType="java.lang.Long">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.userType != null">
        user_type = #{record.userType,jdbcType=CHAR},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=CHAR},
      </if>
      <if test="record.idNumber != null">
        id_number = #{record.idNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.taxpayerId != null">
        taxPayer_id = #{record.taxpayerId,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.telephone != null">
        telephone = #{record.telephone,jdbcType=VARCHAR},
      </if>
      <if test="record.mail != null">
        mail = #{record.mail,jdbcType=VARCHAR},
      </if>
      <if test="record.created != null">
        created = #{record.created,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set user_id = #{record.userId,jdbcType=BIGINT},
      user_type = #{record.userType,jdbcType=CHAR},
      user_name = #{record.userName,jdbcType=CHAR},
      id_number = #{record.idNumber,jdbcType=VARCHAR},
      taxPayer_id = #{record.taxpayerId,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      telephone = #{record.telephone,jdbcType=VARCHAR},
      mail = #{record.mail,jdbcType=VARCHAR},
      created = #{record.created,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.issCollege.po.User">
    update user
    <set>
      <if test="userType != null">
        user_type = #{userType,jdbcType=CHAR},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=CHAR},
      </if>
      <if test="idNumber != null">
        id_number = #{idNumber,jdbcType=VARCHAR},
      </if>
      <if test="taxpayerId != null">
        taxPayer_id = #{taxpayerId,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        telephone = #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="mail != null">
        mail = #{mail,jdbcType=VARCHAR},
      </if>
      <if test="created != null">
        created = #{created,jdbcType=TIMESTAMP},
      </if>
    </set>
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.issCollege.po.User">
    update user
    set user_type = #{userType,jdbcType=CHAR},
      user_name = #{userName,jdbcType=CHAR},
      id_number = #{idNumber,jdbcType=VARCHAR},
      taxPayer_id = #{taxpayerId,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      telephone = #{telephone,jdbcType=VARCHAR},
      mail = #{mail,jdbcType=VARCHAR},
      created = #{created,jdbcType=TIMESTAMP}
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
</mapper>